@model PagedList.IPagedList<UserViewModel>

<div class="table-responsive">
    <table class="table">
        <thead>
            <tr>
                <th>Email</th>
                <th>Username</th>
                <th class="d-none d-sm-table-cell">Age</th>
                <th class="d-none d-sm-table-cell">Gender</th>
                <th class="d-none d-md-table-cell">Height</th>
                <th class="d-none d-md-table-cell">Weight</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var user in Model)
            {
                <tr data-email="@user.Email">
                    <td>@user.Email</td>
                    <td>@user.UserName</td>
                    <td class="d-none d-sm-table-cell">@user.Age</td>
                    <td class="d-none d-sm-table-cell">@user.Gender</td>
                    <td class="d-none d-md-table-cell">@user.Height</td>
                    <td class="d-none d-md-table-cell">@user.Weight</td>
                    <td>
                        @if (user.Email != "admin@admin.com")
                        {
                            <button class="btn btn-danger" onclick="deleteUser('@user.Email')">Delete</button>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

@if (Model.PageCount > 1)
{
    <div class="pagination-container">
        <ul class="pagination">
            @if (Model.HasPreviousPage)
            {
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("GetAll", new { page = Model.PageNumber - 1, pageSize = Model.PageSize })">Previous</a>
                </li>
            }
            @for (int i = 1; i <= Model.PageCount; i++)
            {
                <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                    <a class="page-link" href="@Url.Action("GetAll", new { page = i, pageSize = Model.PageSize })">@i</a>
                </li>
            }
            @if (Model.HasNextPage)
            {
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("GetAll", new { page = Model.PageNumber + 1, pageSize = Model.PageSize })">Next</a>
                </li>
            }
        </ul>
    </div>
}

<script>
    async function deleteUser(email) {
        if (confirm("Are you sure you want to delete this user?")) {
            try {
                const response = await fetch(`/User/Remove?email=${email}`, {
                    method: 'POST'
                });

                if (response.ok) {
                    console.log('User deleted successfully');
                    // Remove the user from the UI
                    const userRow = document.querySelector(`tr[data-email="${email}"]`);
                    if (userRow) {
                        userRow.remove();
                    }
                } else {
                    console.log('Error deleting user');
                    // Handle the error case if needed
                }
            } catch (error) {
                console.log('Error:', error);
                // Handle the error case if needed
            }
        }
    }
</script>
